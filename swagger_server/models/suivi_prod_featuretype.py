# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SuiviProdFeaturetype(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, etampe: str=None, dt_c: str=None, dt_m: str=None, id_lot: str=None, local_name: str=None, spatial_repres_type_pna: int=None):  # noqa: E501
        """SuiviProdFeaturetype - a model defined in Swagger

        :param etampe: The etampe of this SuiviProdFeaturetype.  # noqa: E501
        :type etampe: str
        :param dt_c: The dt_c of this SuiviProdFeaturetype.  # noqa: E501
        :type dt_c: str
        :param dt_m: The dt_m of this SuiviProdFeaturetype.  # noqa: E501
        :type dt_m: str
        :param id_lot: The id_lot of this SuiviProdFeaturetype.  # noqa: E501
        :type id_lot: str
        :param local_name: The local_name of this SuiviProdFeaturetype.  # noqa: E501
        :type local_name: str
        :param spatial_repres_type_pna: The spatial_repres_type_pna of this SuiviProdFeaturetype.  # noqa: E501
        :type spatial_repres_type_pna: int
        """
        self.swagger_types = {
            'etampe': str,
            'dt_c': str,
            'dt_m': str,
            'id_lot': str,
            'local_name': str,
            'spatial_repres_type_pna': int
        }

        self.attribute_map = {
            'etampe': 'etampe',
            'dt_c': 'dt_c',
            'dt_m': 'dt_m',
            'id_lot': 'id_lot',
            'local_name': 'local_name',
            'spatial_repres_type_pna': 'spatial_repres_type_pna'
        }
        self._etampe = etampe
        self._dt_c = dt_c
        self._dt_m = dt_m
        self._id_lot = id_lot
        self._local_name = local_name
        self._spatial_repres_type_pna = spatial_repres_type_pna

    @classmethod
    def from_dict(cls, dikt) -> 'SuiviProdFeaturetype':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The suivi_prod-featuretype of this SuiviProdFeaturetype.  # noqa: E501
        :rtype: SuiviProdFeaturetype
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etampe(self) -> str:
        """Gets the etampe of this SuiviProdFeaturetype.


        :return: The etampe of this SuiviProdFeaturetype.
        :rtype: str
        """
        return self._etampe

    @etampe.setter
    def etampe(self, etampe: str):
        """Sets the etampe of this SuiviProdFeaturetype.


        :param etampe: The etampe of this SuiviProdFeaturetype.
        :type etampe: str
        """

        self._etampe = etampe

    @property
    def dt_c(self) -> str:
        """Gets the dt_c of this SuiviProdFeaturetype.


        :return: The dt_c of this SuiviProdFeaturetype.
        :rtype: str
        """
        return self._dt_c

    @dt_c.setter
    def dt_c(self, dt_c: str):
        """Sets the dt_c of this SuiviProdFeaturetype.


        :param dt_c: The dt_c of this SuiviProdFeaturetype.
        :type dt_c: str
        """

        self._dt_c = dt_c

    @property
    def dt_m(self) -> str:
        """Gets the dt_m of this SuiviProdFeaturetype.


        :return: The dt_m of this SuiviProdFeaturetype.
        :rtype: str
        """
        return self._dt_m

    @dt_m.setter
    def dt_m(self, dt_m: str):
        """Sets the dt_m of this SuiviProdFeaturetype.


        :param dt_m: The dt_m of this SuiviProdFeaturetype.
        :type dt_m: str
        """

        self._dt_m = dt_m

    @property
    def id_lot(self) -> str:
        """Gets the id_lot of this SuiviProdFeaturetype.


        :return: The id_lot of this SuiviProdFeaturetype.
        :rtype: str
        """
        return self._id_lot

    @id_lot.setter
    def id_lot(self, id_lot: str):
        """Sets the id_lot of this SuiviProdFeaturetype.


        :param id_lot: The id_lot of this SuiviProdFeaturetype.
        :type id_lot: str
        """

        self._id_lot = id_lot

    @property
    def local_name(self) -> str:
        """Gets the local_name of this SuiviProdFeaturetype.


        :return: The local_name of this SuiviProdFeaturetype.
        :rtype: str
        """
        return self._local_name

    @local_name.setter
    def local_name(self, local_name: str):
        """Sets the local_name of this SuiviProdFeaturetype.


        :param local_name: The local_name of this SuiviProdFeaturetype.
        :type local_name: str
        """

        self._local_name = local_name

    @property
    def spatial_repres_type_pna(self) -> int:
        """Gets the spatial_repres_type_pna of this SuiviProdFeaturetype.


        :return: The spatial_repres_type_pna of this SuiviProdFeaturetype.
        :rtype: int
        """
        return self._spatial_repres_type_pna

    @spatial_repres_type_pna.setter
    def spatial_repres_type_pna(self, spatial_repres_type_pna: int):
        """Sets the spatial_repres_type_pna of this SuiviProdFeaturetype.


        :param spatial_repres_type_pna: The spatial_repres_type_pna of this SuiviProdFeaturetype.
        :type spatial_repres_type_pna: int
        """

        self._spatial_repres_type_pna = spatial_repres_type_pna
