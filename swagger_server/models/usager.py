# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Usager(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, nom: str=None, mot_de_passe: str=None, scopes: List[str]=None, equipes: List[str]=None, themes: List[str]=None, cle_aws_id: str=None):  # noqa: E501
        """Usager - a model defined in Swagger

        :param nom: The nom of this Usager.  # noqa: E501
        :type nom: str
        :param mot_de_passe: The mot_de_passe of this Usager.  # noqa: E501
        :type mot_de_passe: str
        :param scopes: The scopes of this Usager.  # noqa: E501
        :type scopes: List[str]
        :param equipes: The equipes of this Usager.  # noqa: E501
        :type equipes: List[str]
        :param themes: The themes of this Usager.  # noqa: E501
        :type themes: List[str]
        :param cle_aws_id: The cle_aws_id of this Usager.  # noqa: E501
        :type cle_aws_id: str
        """
        self.swagger_types = {
            'nom': str,
            'mot_de_passe': str,
            'scopes': List[str],
            'equipes': List[str],
            'themes': List[str],
            'cle_aws_id': str
        }

        self.attribute_map = {
            'nom': 'nom',
            'mot_de_passe': 'mot_de_passe',
            'scopes': 'scopes',
            'equipes': 'equipes',
            'themes': 'themes',
            'cle_aws_id': 'cle_aws_id'
        }
        self._nom = nom
        self._mot_de_passe = mot_de_passe
        self._scopes = scopes
        self._equipes = equipes
        self._themes = themes
        self._cle_aws_id = cle_aws_id

    @classmethod
    def from_dict(cls, dikt) -> 'Usager':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The usager of this Usager.  # noqa: E501
        :rtype: Usager
        """
        return util.deserialize_model(dikt, cls)

    @property
    def nom(self) -> str:
        """Gets the nom of this Usager.


        :return: The nom of this Usager.
        :rtype: str
        """
        return self._nom

    @nom.setter
    def nom(self, nom: str):
        """Sets the nom of this Usager.


        :param nom: The nom of this Usager.
        :type nom: str
        """

        self._nom = nom

    @property
    def mot_de_passe(self) -> str:
        """Gets the mot_de_passe of this Usager.


        :return: The mot_de_passe of this Usager.
        :rtype: str
        """
        return self._mot_de_passe

    @mot_de_passe.setter
    def mot_de_passe(self, mot_de_passe: str):
        """Sets the mot_de_passe of this Usager.


        :param mot_de_passe: The mot_de_passe of this Usager.
        :type mot_de_passe: str
        """

        self._mot_de_passe = mot_de_passe

    @property
    def scopes(self) -> List[str]:
        """Gets the scopes of this Usager.


        :return: The scopes of this Usager.
        :rtype: List[str]
        """
        return self._scopes

    @scopes.setter
    def scopes(self, scopes: List[str]):
        """Sets the scopes of this Usager.


        :param scopes: The scopes of this Usager.
        :type scopes: List[str]
        """

        self._scopes = scopes

    @property
    def equipes(self) -> List[str]:
        """Gets the equipes of this Usager.


        :return: The equipes of this Usager.
        :rtype: List[str]
        """
        return self._equipes

    @equipes.setter
    def equipes(self, equipes: List[str]):
        """Sets the equipes of this Usager.


        :param equipes: The equipes of this Usager.
        :type equipes: List[str]
        """

        self._equipes = equipes

    @property
    def themes(self) -> List[str]:
        """Gets the themes of this Usager.


        :return: The themes of this Usager.
        :rtype: List[str]
        """
        return self._themes

    @themes.setter
    def themes(self, themes: List[str]):
        """Sets the themes of this Usager.


        :param themes: The themes of this Usager.
        :type themes: List[str]
        """

        self._themes = themes

    @property
    def cle_aws_id(self) -> str:
        """Gets the cle_aws_id of this Usager.


        :return: The cle_aws_id of this Usager.
        :rtype: str
        """
        return self._cle_aws_id

    @cle_aws_id.setter
    def cle_aws_id(self, cle_aws_id: str):
        """Sets the cle_aws_id of this Usager.


        :param cle_aws_id: The cle_aws_id of this Usager.
        :type cle_aws_id: str
        """

        self._cle_aws_id = cle_aws_id
