# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SuiviProdLotNoRel(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, etampe: str=None, dt_c: str=None, dt_m: str=None, id_lot: str=None, operateur: str=None, date_debut: str=None, date_fin: str=None, theme_cl: int=None, type_travail_cl: int=None, statut_lot_cl: int=None):  # noqa: E501
        """SuiviProdLotNoRel - a model defined in Swagger

        :param etampe: The etampe of this SuiviProdLotNoRel.  # noqa: E501
        :type etampe: str
        :param dt_c: The dt_c of this SuiviProdLotNoRel.  # noqa: E501
        :type dt_c: str
        :param dt_m: The dt_m of this SuiviProdLotNoRel.  # noqa: E501
        :type dt_m: str
        :param id_lot: The id_lot of this SuiviProdLotNoRel.  # noqa: E501
        :type id_lot: str
        :param operateur: The operateur of this SuiviProdLotNoRel.  # noqa: E501
        :type operateur: str
        :param date_debut: The date_debut of this SuiviProdLotNoRel.  # noqa: E501
        :type date_debut: str
        :param date_fin: The date_fin of this SuiviProdLotNoRel.  # noqa: E501
        :type date_fin: str
        :param theme_cl: The theme_cl of this SuiviProdLotNoRel.  # noqa: E501
        :type theme_cl: int
        :param type_travail_cl: The type_travail_cl of this SuiviProdLotNoRel.  # noqa: E501
        :type type_travail_cl: int
        :param statut_lot_cl: The statut_lot_cl of this SuiviProdLotNoRel.  # noqa: E501
        :type statut_lot_cl: int
        """
        self.swagger_types = {
            'etampe': str,
            'dt_c': str,
            'dt_m': str,
            'id_lot': str,
            'operateur': str,
            'date_debut': str,
            'date_fin': str,
            'theme_cl': int,
            'type_travail_cl': int,
            'statut_lot_cl': int
        }

        self.attribute_map = {
            'etampe': 'etampe',
            'dt_c': 'dt_c',
            'dt_m': 'dt_m',
            'id_lot': 'id_lot',
            'operateur': 'operateur',
            'date_debut': 'date_debut',
            'date_fin': 'date_fin',
            'theme_cl': 'theme_cl',
            'type_travail_cl': 'type_travail_cl',
            'statut_lot_cl': 'statut_lot_cl'
        }
        self._etampe = etampe
        self._dt_c = dt_c
        self._dt_m = dt_m
        self._id_lot = id_lot
        self._operateur = operateur
        self._date_debut = date_debut
        self._date_fin = date_fin
        self._theme_cl = theme_cl
        self._type_travail_cl = type_travail_cl
        self._statut_lot_cl = statut_lot_cl

    @classmethod
    def from_dict(cls, dikt) -> 'SuiviProdLotNoRel':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The suivi_prod-lot-no_rel of this SuiviProdLotNoRel.  # noqa: E501
        :rtype: SuiviProdLotNoRel
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etampe(self) -> str:
        """Gets the etampe of this SuiviProdLotNoRel.


        :return: The etampe of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._etampe

    @etampe.setter
    def etampe(self, etampe: str):
        """Sets the etampe of this SuiviProdLotNoRel.


        :param etampe: The etampe of this SuiviProdLotNoRel.
        :type etampe: str
        """

        self._etampe = etampe

    @property
    def dt_c(self) -> str:
        """Gets the dt_c of this SuiviProdLotNoRel.


        :return: The dt_c of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._dt_c

    @dt_c.setter
    def dt_c(self, dt_c: str):
        """Sets the dt_c of this SuiviProdLotNoRel.


        :param dt_c: The dt_c of this SuiviProdLotNoRel.
        :type dt_c: str
        """

        self._dt_c = dt_c

    @property
    def dt_m(self) -> str:
        """Gets the dt_m of this SuiviProdLotNoRel.


        :return: The dt_m of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._dt_m

    @dt_m.setter
    def dt_m(self, dt_m: str):
        """Sets the dt_m of this SuiviProdLotNoRel.


        :param dt_m: The dt_m of this SuiviProdLotNoRel.
        :type dt_m: str
        """

        self._dt_m = dt_m

    @property
    def id_lot(self) -> str:
        """Gets the id_lot of this SuiviProdLotNoRel.


        :return: The id_lot of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._id_lot

    @id_lot.setter
    def id_lot(self, id_lot: str):
        """Sets the id_lot of this SuiviProdLotNoRel.


        :param id_lot: The id_lot of this SuiviProdLotNoRel.
        :type id_lot: str
        """

        self._id_lot = id_lot

    @property
    def operateur(self) -> str:
        """Gets the operateur of this SuiviProdLotNoRel.


        :return: The operateur of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._operateur

    @operateur.setter
    def operateur(self, operateur: str):
        """Sets the operateur of this SuiviProdLotNoRel.


        :param operateur: The operateur of this SuiviProdLotNoRel.
        :type operateur: str
        """

        self._operateur = operateur

    @property
    def date_debut(self) -> str:
        """Gets the date_debut of this SuiviProdLotNoRel.


        :return: The date_debut of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._date_debut

    @date_debut.setter
    def date_debut(self, date_debut: str):
        """Sets the date_debut of this SuiviProdLotNoRel.


        :param date_debut: The date_debut of this SuiviProdLotNoRel.
        :type date_debut: str
        """

        self._date_debut = date_debut

    @property
    def date_fin(self) -> str:
        """Gets the date_fin of this SuiviProdLotNoRel.


        :return: The date_fin of this SuiviProdLotNoRel.
        :rtype: str
        """
        return self._date_fin

    @date_fin.setter
    def date_fin(self, date_fin: str):
        """Sets the date_fin of this SuiviProdLotNoRel.


        :param date_fin: The date_fin of this SuiviProdLotNoRel.
        :type date_fin: str
        """

        self._date_fin = date_fin

    @property
    def theme_cl(self) -> int:
        """Gets the theme_cl of this SuiviProdLotNoRel.


        :return: The theme_cl of this SuiviProdLotNoRel.
        :rtype: int
        """
        return self._theme_cl

    @theme_cl.setter
    def theme_cl(self, theme_cl: int):
        """Sets the theme_cl of this SuiviProdLotNoRel.


        :param theme_cl: The theme_cl of this SuiviProdLotNoRel.
        :type theme_cl: int
        """

        self._theme_cl = theme_cl

    @property
    def type_travail_cl(self) -> int:
        """Gets the type_travail_cl of this SuiviProdLotNoRel.


        :return: The type_travail_cl of this SuiviProdLotNoRel.
        :rtype: int
        """
        return self._type_travail_cl

    @type_travail_cl.setter
    def type_travail_cl(self, type_travail_cl: int):
        """Sets the type_travail_cl of this SuiviProdLotNoRel.


        :param type_travail_cl: The type_travail_cl of this SuiviProdLotNoRel.
        :type type_travail_cl: int
        """

        self._type_travail_cl = type_travail_cl

    @property
    def statut_lot_cl(self) -> int:
        """Gets the statut_lot_cl of this SuiviProdLotNoRel.


        :return: The statut_lot_cl of this SuiviProdLotNoRel.
        :rtype: int
        """
        return self._statut_lot_cl

    @statut_lot_cl.setter
    def statut_lot_cl(self, statut_lot_cl: int):
        """Sets the statut_lot_cl of this SuiviProdLotNoRel.


        :param statut_lot_cl: The statut_lot_cl of this SuiviProdLotNoRel.
        :type statut_lot_cl: int
        """

        self._statut_lot_cl = statut_lot_cl
