# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class MetadataValidation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, theme: str=None, id_ut: str=None, fichier_json: str=None, logfile: str=None):  # noqa: E501
        """MetadataValidation - a model defined in Swagger

        :param theme: The theme of this MetadataValidation.  # noqa: E501
        :type theme: str
        :param id_ut: The id_ut of this MetadataValidation.  # noqa: E501
        :type id_ut: str
        :param fichier_json: The fichier_json of this MetadataValidation.  # noqa: E501
        :type fichier_json: str
        :param logfile: The logfile of this MetadataValidation.  # noqa: E501
        :type logfile: str
        """
        self.swagger_types = {
            'theme': str,
            'id_ut': str,
            'fichier_json': str,
            'logfile': str
        }

        self.attribute_map = {
            'theme': 'theme',
            'id_ut': 'id_ut',
            'fichier_json': 'fichier_json',
            'logfile': 'logfile'
        }
        self._theme = theme
        self._id_ut = id_ut
        self._fichier_json = fichier_json
        self._logfile = logfile

    @classmethod
    def from_dict(cls, dikt) -> 'MetadataValidation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The metadata_validation of this MetadataValidation.  # noqa: E501
        :rtype: MetadataValidation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def theme(self) -> str:
        """Gets the theme of this MetadataValidation.


        :return: The theme of this MetadataValidation.
        :rtype: str
        """
        return self._theme

    @theme.setter
    def theme(self, theme: str):
        """Sets the theme of this MetadataValidation.


        :param theme: The theme of this MetadataValidation.
        :type theme: str
        """

        self._theme = theme

    @property
    def id_ut(self) -> str:
        """Gets the id_ut of this MetadataValidation.


        :return: The id_ut of this MetadataValidation.
        :rtype: str
        """
        return self._id_ut

    @id_ut.setter
    def id_ut(self, id_ut: str):
        """Sets the id_ut of this MetadataValidation.


        :param id_ut: The id_ut of this MetadataValidation.
        :type id_ut: str
        """

        self._id_ut = id_ut

    @property
    def fichier_json(self) -> str:
        """Gets the fichier_json of this MetadataValidation.


        :return: The fichier_json of this MetadataValidation.
        :rtype: str
        """
        return self._fichier_json

    @fichier_json.setter
    def fichier_json(self, fichier_json: str):
        """Sets the fichier_json of this MetadataValidation.


        :param fichier_json: The fichier_json of this MetadataValidation.
        :type fichier_json: str
        """

        self._fichier_json = fichier_json

    @property
    def logfile(self) -> str:
        """Gets the logfile of this MetadataValidation.


        :return: The logfile of this MetadataValidation.
        :rtype: str
        """
        return self._logfile

    @logfile.setter
    def logfile(self, logfile: str):
        """Sets the logfile of this MetadataValidation.


        :param logfile: The logfile of this MetadataValidation.
        :type logfile: str
        """

        self._logfile = logfile
