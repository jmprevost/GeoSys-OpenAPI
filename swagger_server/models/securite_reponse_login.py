# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SecuriteReponseLogin(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, access_token: str=None, token_type: str=None, expires_in: int=None, scope: List[str]=None, theme: List[str]=None, equipe: List[str]=None):  # noqa: E501
        """SecuriteReponseLogin - a model defined in Swagger

        :param access_token: The access_token of this SecuriteReponseLogin.  # noqa: E501
        :type access_token: str
        :param token_type: The token_type of this SecuriteReponseLogin.  # noqa: E501
        :type token_type: str
        :param expires_in: The expires_in of this SecuriteReponseLogin.  # noqa: E501
        :type expires_in: int
        :param scope: The scope of this SecuriteReponseLogin.  # noqa: E501
        :type scope: List[str]
        :param theme: The theme of this SecuriteReponseLogin.  # noqa: E501
        :type theme: List[str]
        :param equipe: The equipe of this SecuriteReponseLogin.  # noqa: E501
        :type equipe: List[str]
        """
        self.swagger_types = {
            'access_token': str,
            'token_type': str,
            'expires_in': int,
            'scope': List[str],
            'theme': List[str],
            'equipe': List[str]
        }

        self.attribute_map = {
            'access_token': 'access_token',
            'token_type': 'token_type',
            'expires_in': 'expires_in',
            'scope': 'scope',
            'theme': 'theme',
            'equipe': 'equipe'
        }
        self._access_token = access_token
        self._token_type = token_type
        self._expires_in = expires_in
        self._scope = scope
        self._theme = theme
        self._equipe = equipe

    @classmethod
    def from_dict(cls, dikt) -> 'SecuriteReponseLogin':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The securite_reponse_login of this SecuriteReponseLogin.  # noqa: E501
        :rtype: SecuriteReponseLogin
        """
        return util.deserialize_model(dikt, cls)

    @property
    def access_token(self) -> str:
        """Gets the access_token of this SecuriteReponseLogin.


        :return: The access_token of this SecuriteReponseLogin.
        :rtype: str
        """
        return self._access_token

    @access_token.setter
    def access_token(self, access_token: str):
        """Sets the access_token of this SecuriteReponseLogin.


        :param access_token: The access_token of this SecuriteReponseLogin.
        :type access_token: str
        """

        self._access_token = access_token

    @property
    def token_type(self) -> str:
        """Gets the token_type of this SecuriteReponseLogin.


        :return: The token_type of this SecuriteReponseLogin.
        :rtype: str
        """
        return self._token_type

    @token_type.setter
    def token_type(self, token_type: str):
        """Sets the token_type of this SecuriteReponseLogin.


        :param token_type: The token_type of this SecuriteReponseLogin.
        :type token_type: str
        """

        self._token_type = token_type

    @property
    def expires_in(self) -> int:
        """Gets the expires_in of this SecuriteReponseLogin.


        :return: The expires_in of this SecuriteReponseLogin.
        :rtype: int
        """
        return self._expires_in

    @expires_in.setter
    def expires_in(self, expires_in: int):
        """Sets the expires_in of this SecuriteReponseLogin.


        :param expires_in: The expires_in of this SecuriteReponseLogin.
        :type expires_in: int
        """

        self._expires_in = expires_in

    @property
    def scope(self) -> List[str]:
        """Gets the scope of this SecuriteReponseLogin.


        :return: The scope of this SecuriteReponseLogin.
        :rtype: List[str]
        """
        return self._scope

    @scope.setter
    def scope(self, scope: List[str]):
        """Sets the scope of this SecuriteReponseLogin.


        :param scope: The scope of this SecuriteReponseLogin.
        :type scope: List[str]
        """

        self._scope = scope

    @property
    def theme(self) -> List[str]:
        """Gets the theme of this SecuriteReponseLogin.


        :return: The theme of this SecuriteReponseLogin.
        :rtype: List[str]
        """
        return self._theme

    @theme.setter
    def theme(self, theme: List[str]):
        """Sets the theme of this SecuriteReponseLogin.


        :param theme: The theme of this SecuriteReponseLogin.
        :type theme: List[str]
        """

        self._theme = theme

    @property
    def equipe(self) -> List[str]:
        """Gets the equipe of this SecuriteReponseLogin.


        :return: The equipe of this SecuriteReponseLogin.
        :rtype: List[str]
        """
        return self._equipe

    @equipe.setter
    def equipe(self, equipe: List[str]):
        """Sets the equipe of this SecuriteReponseLogin.


        :param equipe: The equipe of this SecuriteReponseLogin.
        :type equipe: List[str]
        """

        self._equipe = equipe
