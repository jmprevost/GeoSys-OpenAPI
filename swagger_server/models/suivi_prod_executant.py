# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class SuiviProdExecutant(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, etampe: str=None, dt_c: str=None, dt_m: str=None, id: str=None, id_contractant: str=None, no_contrat: str=None, prix_contrat: float=None):  # noqa: E501
        """SuiviProdExecutant - a model defined in Swagger

        :param etampe: The etampe of this SuiviProdExecutant.  # noqa: E501
        :type etampe: str
        :param dt_c: The dt_c of this SuiviProdExecutant.  # noqa: E501
        :type dt_c: str
        :param dt_m: The dt_m of this SuiviProdExecutant.  # noqa: E501
        :type dt_m: str
        :param id: The id of this SuiviProdExecutant.  # noqa: E501
        :type id: str
        :param id_contractant: The id_contractant of this SuiviProdExecutant.  # noqa: E501
        :type id_contractant: str
        :param no_contrat: The no_contrat of this SuiviProdExecutant.  # noqa: E501
        :type no_contrat: str
        :param prix_contrat: The prix_contrat of this SuiviProdExecutant.  # noqa: E501
        :type prix_contrat: float
        """
        self.swagger_types = {
            'etampe': str,
            'dt_c': str,
            'dt_m': str,
            'id': str,
            'id_contractant': str,
            'no_contrat': str,
            'prix_contrat': float
        }

        self.attribute_map = {
            'etampe': 'etampe',
            'dt_c': 'dt_c',
            'dt_m': 'dt_m',
            'id': 'id',
            'id_contractant': 'id_contractant',
            'no_contrat': 'no_contrat',
            'prix_contrat': 'prix_contrat'
        }
        self._etampe = etampe
        self._dt_c = dt_c
        self._dt_m = dt_m
        self._id = id
        self._id_contractant = id_contractant
        self._no_contrat = no_contrat
        self._prix_contrat = prix_contrat

    @classmethod
    def from_dict(cls, dikt) -> 'SuiviProdExecutant':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The suivi_prod-executant of this SuiviProdExecutant.  # noqa: E501
        :rtype: SuiviProdExecutant
        """
        return util.deserialize_model(dikt, cls)

    @property
    def etampe(self) -> str:
        """Gets the etampe of this SuiviProdExecutant.


        :return: The etampe of this SuiviProdExecutant.
        :rtype: str
        """
        return self._etampe

    @etampe.setter
    def etampe(self, etampe: str):
        """Sets the etampe of this SuiviProdExecutant.


        :param etampe: The etampe of this SuiviProdExecutant.
        :type etampe: str
        """

        self._etampe = etampe

    @property
    def dt_c(self) -> str:
        """Gets the dt_c of this SuiviProdExecutant.


        :return: The dt_c of this SuiviProdExecutant.
        :rtype: str
        """
        return self._dt_c

    @dt_c.setter
    def dt_c(self, dt_c: str):
        """Sets the dt_c of this SuiviProdExecutant.


        :param dt_c: The dt_c of this SuiviProdExecutant.
        :type dt_c: str
        """

        self._dt_c = dt_c

    @property
    def dt_m(self) -> str:
        """Gets the dt_m of this SuiviProdExecutant.


        :return: The dt_m of this SuiviProdExecutant.
        :rtype: str
        """
        return self._dt_m

    @dt_m.setter
    def dt_m(self, dt_m: str):
        """Sets the dt_m of this SuiviProdExecutant.


        :param dt_m: The dt_m of this SuiviProdExecutant.
        :type dt_m: str
        """

        self._dt_m = dt_m

    @property
    def id(self) -> str:
        """Gets the id of this SuiviProdExecutant.


        :return: The id of this SuiviProdExecutant.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this SuiviProdExecutant.


        :param id: The id of this SuiviProdExecutant.
        :type id: str
        """

        self._id = id

    @property
    def id_contractant(self) -> str:
        """Gets the id_contractant of this SuiviProdExecutant.


        :return: The id_contractant of this SuiviProdExecutant.
        :rtype: str
        """
        return self._id_contractant

    @id_contractant.setter
    def id_contractant(self, id_contractant: str):
        """Sets the id_contractant of this SuiviProdExecutant.


        :param id_contractant: The id_contractant of this SuiviProdExecutant.
        :type id_contractant: str
        """

        self._id_contractant = id_contractant

    @property
    def no_contrat(self) -> str:
        """Gets the no_contrat of this SuiviProdExecutant.


        :return: The no_contrat of this SuiviProdExecutant.
        :rtype: str
        """
        return self._no_contrat

    @no_contrat.setter
    def no_contrat(self, no_contrat: str):
        """Sets the no_contrat of this SuiviProdExecutant.


        :param no_contrat: The no_contrat of this SuiviProdExecutant.
        :type no_contrat: str
        """

        self._no_contrat = no_contrat

    @property
    def prix_contrat(self) -> float:
        """Gets the prix_contrat of this SuiviProdExecutant.


        :return: The prix_contrat of this SuiviProdExecutant.
        :rtype: float
        """
        return self._prix_contrat

    @prix_contrat.setter
    def prix_contrat(self, prix_contrat: float):
        """Sets the prix_contrat of this SuiviProdExecutant.


        :param prix_contrat: The prix_contrat of this SuiviProdExecutant.
        :type prix_contrat: float
        """

        self._prix_contrat = prix_contrat
